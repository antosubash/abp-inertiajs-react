name: Docker Build and Push to GitHub Container Registry

on:
  push:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Determine Version Based on Commit History
        id: get_version
        run: |
          # Get the latest version from the commit history, default to v0.0.0 if none exists
          latest_version=$(git log --grep='^v[0-9]\+\.[0-9]\+\.[0-9]\+$' -n 1 --pretty=format:"%s" || echo "v0.0.0")

          # Extract major, minor, patch from the latest version
          IFS='.' read -r major minor patch <<< "${latest_version#v}"

          # Increment patch version for new version
          new_patch=$((patch + 1))
          new_version="v$major.$minor.$new_patch"

          echo "::set-output name=version::$new_version"

      - name: Tag the Repository with New Version
        run: |
          git tag ${{ steps.get_version.outputs.version }}
          git push origin ${{ steps.get_version.outputs.version }}

  build:
    runs-on: ubuntu-latest
    needs: version

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./InertiaDemo/InertiaDemo/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.version.outputs.version }}
            ghcr.io/${{ github.repository }}:latest